@startuml
hide footbox

Actor User
"User" -> ":Duke": "remove-item..."
activate ":Duke"
":Duke" -> ":CommandParser": createCommand()
activate ":CommandParser"
":CommandParser" -> ":RemoveItemCommand": new
activate ":RemoveItemCommand"
return :RemoveItemCommand
":CommandParser" --> ":Duke": command
deactivate

":Duke" -> ":RemoveItemCommand" : executeCommand()
activate ":RemoveItemCommand"
":RemoveItemCommand" -> ":RemoveItemCommand": getArgsRemoveTxCmd()
activate ":RemoveItemCommand"
return args
    ":RemoveItemCommand" -> ":ItemList": getItemById()
    activate ":ItemList"
alt item is valid
    ":ItemList" --> ":RemoveItemCommand": :Item
    deactivate ":ItemList"
    ":RemoveItemCommand" -> ":ItemList": deleteItem()
    activate ":ItemList"
    return
    ":RemoveItemCommand" -> "<<class>>\nUi": deleteItemMessage()
    activate "<<class>>\nUi"
    return
    deactivate "<<class>>\nUi"
    deactivate ":ItemList"
else item is invalid
    ":RemoveItemCommand" --> ":Duke" : DukeException
    deactivate ":RemoveItemCommand"
    ":Duke" -> "<<class>>\nUi" : print error
    activate "<<class>>\nUi"
    "<<class>>\nUi" --> ":Duke" : error message
    deactivate "<<class>>\nUi"
end
deactivate ":RemoveItemCommand"
":Duke" --> "User"
@enduml